{"version":3,"sources":["components/Title.js","lib/webservice.js","lib/artistService.js","Artists/DialogAddArtist.js","lib/albumService.js","Albums/DialogDeleteAlbum.js","Albums/DialogUpdateAlbum.js","Artists/Artist.js","Artists/DialogDeleteArtist.js","Artists/DialogUpdateArtist.js","lib/favoryService.js","Artists/Artists.js","lib/songService.js","Albums/DialogAddSong.js","Albums/DialogUpdateSong.js","Albums/DialogDeleteSong.js","lib/playlistService.js","Albums/DialogAddSongToPlaylist.js","Albums/Album.js","Albums/DialogAddAlbum.js","Albums/Albums.js","lib/userService.js","Users/DialogAddUser.js","components/LoginForm.js","Users/Users.js","Favori/Favory.js","Playlist/DialogAddPlaylist.js","Playlist/Playlists.js","App.js","index.js"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","axios","require","defaults","baseURL","headers","post","WebSersice","endpoint","this","entity_endpoint","token","localStorage","getItem","get","then","r","data","content","id","entity","put","delete","artistService","webservice","DialogAddArtist","open","handleClose","reload","useState","alias","setAlias","image_artist","setImage_Artist","addArtist","a","add","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","e","target","value","required","DialogActions","Button","onClick","albumService","DialogDeleteAlbum","album","deleteAlbum","AlbumService","name","DialogUpdateAlbum","setName","image_album","setImage_Album","year","setYear","artistName","setArtistName","updateAlbum","res","release_year","artist","update","defaultValue","type","useStyles","makeStyles","theme","root","flexGrow","padding","spacing","card","height","width","avatar","palette","getContrastText","backgroundColor","Artist","loading","setLoading","albums","setAlbums","setArtist","openAddDialog","setOpenAddDialog","openDeleteDialog","setOpenDeleteDialog","albumDeleted","openUpdateDialog","setOpenUpdateDialog","albumUpdate","openAlert","setOpenAlert","classes","useParams","useEffect","init","getOne","setTimeout","CardMedia","image","process","title","style","Avatar","className","CircularProgress","Grid","container","direction","justify","alignItems","map","item","xs","sm","md","Card","Link","to","CardContent","isAdmin","indexOf","Box","display","justifyContent","Fab","aria-label","Add","Snackbar","autoHideDuration","Alert","severity","DialogDeleteArtist","deleteArtist","DialogUpdateArtist","updateArtist","favoryService","media","Artists","artists","setArtists","artistDeleted","setArtistDeleted","artistUpdate","setArtistUpdate","getAll","substring","IconButton","Edit","Delete","addFavorite","Star","songService","DialogAddSong","setTitle","duration","setDuration","addSong","idArtist","SongService","album_id","artist_id","DialogUpdateSong","song","updateSong","DialogDeleteSong","deleteSong","playlistService","DialogAddSongToPlaylist","addPlaylist","Album","setAlbum","songs","setSongs","songDeleted","setSongDeleted","songUpdate","setSongUpdate","openAddSongToPlaylist","setOpenAddSongToPlaylist","src","alt","Table","size","TableHead","TableRow","TableCell","TableBody","QueueMusic","DialogAddAlbum","addAlbum","artist_name","Albums","setAlbumDeleted","setAlbumUpdate","align","userService","clear","DialogAddUser","email","setEmail","password","setPassword","pseudo","setPseudo","addUser","UserService","favorite_id","LoginForm","myChangeHandler","event","nam","val","setState","login","state","user","undefined","setItem","redirect","Form","FormGroup","FormControl","left","top","Input","border","background","React","Component","Users","error","Favory","favoritesAlbums","setFavoritesAlbums","favoritesSongs","setFavoritesSongs","favoritesArtists","setFavoritesArtists","favorites","favoriteArtists","favoriteAlbums","favoriteSongs","favory","deleteFavorite","DialogAddPlaylist","Playlist","playlists","setPlaylists","PlaylistService","playlist","drawerWidth","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","Homes","App","history","createHashHistory","window","useTheme","mobileOpen","setMobileOpen","document","body","handleDrawerToggle","useLocation","pathname","ListItem","ListItemIcon","Home","Divider","List","ListItemText","primary","Person","CssBaseline","AppBar","position","clsx","appBarShift","Toolbar","edge","noWrap","aria-controls","aria-haspopup","AccountCircle","Boolean","signOut","go","DirectionsRun","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","keepMounted","xsDown","exact","path","render","createMuiTheme","main","ReactDOM","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.09a08558.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  )\n}\n\nTitle.propTypes = {\n  children: PropTypes.node\n}\n","const axios = require('axios');\naxios.defaults.baseURL = 'http://51.91.58.213:8080';\naxios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nexport default class WebSersice {\n\n    entity_endpoint;\n    \n    constructor(endpoint){\n        this.entity_endpoint = endpoint;\n    }\n    async getAll() {\n        const token = localStorage.getItem('token')\n        return await axios.get(this.entity_endpoint + '?page=0&limit=25',{headers:{\n            'Authorization': `Bearer ${token}` \n        }}).then(\n            function(r){\n                return r.data.content\n            }\n        );\n\n      }\n    async getOne(id){\n        const token = localStorage.getItem('token')\n        return await axios.get(this.entity_endpoint + '/' + id,{headers:{\n            'Authorization': `Bearer ${token}` \n        }}).then(\n            function(r){\n                return r.data\n            }\n        );\n      }\n\n    async add(entity) {\n        const token = localStorage.getItem('token')\n        return axios.post(this.entity_endpoint, entity,{headers:{\n            'Authorization': `Bearer ${token}` \n        }});\n      }\n\n    async update(entity) {\n        const token = localStorage.getItem('token')\n        return axios.put(this.entity_endpoint, entity,{headers:{\n            'Authorization': `Bearer ${token}` \n        }});\n      }\n\n    async delete(id) {\n        const token = localStorage.getItem('token')\n        return axios.delete(`${this.entity_endpoint}/${id}`,{headers:{\n            'Authorization': `Bearer ${token}` \n        }});\n    }\n\n}\n","import webservice from '../lib/webservice'\n\nclass ArtistService extends webservice {\n\n    constructor(){\n        super('artist')\n    }\n}\n\nconst artistService = new ArtistService();\n\nexport default artistService;","import React, { useState } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport artistService from '../lib/artistService'\n\nexport default function DialogAddArtist({ open, handleClose, reload }) {\n  const [alias, setAlias] = useState('')\n  const [image_artist, setImage_Artist] = useState('')\n\n  const addArtist = async () => {\n    if (alias === '') {\n      return\n    } else if (image_artist === ''){\n      setImage_Artist(null)\n    }\n    \n    await artistService.add({alias: alias, image_artist: image_artist})\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Ajouter un nouvel artiste</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Pour ajouter un artiste, veuillez saisir les champs demandés</DialogContentText>\n        <TextField autoFocus margin=\"dense\" id=\"alias\" label=\"Alias\" fullWidth onChange={(e) => setAlias(e.target.value)} required />\n        <TextField margin=\"dense\" id=\"image_artist\" label=\"Image\" fullWidth onChange={(e) => setImage_Artist(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button variant=\"outlined\" onClick={addArtist} color=\"primary\">\n          Ajouter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import webservice from '../lib/webservice'\n\nclass AlbumService extends webservice {\n\n    constructor(){\n        super('album')\n    }\n}\n\nconst albumService = new AlbumService();\n\nexport default albumService;","import React from 'react'\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport AlbumService from '../lib/albumService'\n\nexport default function DialogDeleteAlbum({ open, handleClose, reload, album}) {\n\n  const deleteAlbum = async () => {\n    await AlbumService.delete(album.id)\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Suppression d'un album</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Voulez-vous vraiment supprimer {album.name} ?</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Non\n        </Button>\n        <Button variant=\"outlined\" onClick={deleteAlbum} color=\"primary\">\n          Oui\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core'\nimport AlbumService from '../lib/albumService'\nimport { ContactsOutlined } from '@material-ui/icons'\n\nexport default function DialogUpdateAlbum({ open, handleClose, reload, album }) {\n  const [name, setName] = useState('')\n  const [image_album, setImage_Album] = useState('')\n  const [year, setYear] = useState('') \n  const [artistName, setArtistName] = useState('')\n\n\n  const updateAlbum = async () => {\n    // if (album.name === '' || album.year === '' || album.artist.alias === '') {\n    //   return\n    // } else if (image_album === ''){\n    //   setImage_Album(null)\n    // }\n    let res = {}\n    res.id = album.id\n    if(name ===''){\n      res.name = album.name\n    }else{\n      res.name = name\n    }\n    if(image_album === \"\"){\n      res.image_album = album.image_album\n    }else{\n      res.image_album = image_album\n    }\n    if(year === null){\n      res.year = album.release_year\n    }else{\n      res.year = year\n    }\n    if(artistName === \"\"){\n      res.artistName = album.artist.alias\n    }else{\n      res.artistName = artistName\n    }\n    await AlbumService.update(res)\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Modifier un nouveau album</DialogTitle>\n      <DialogContent>\n        <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Nom\" defaultValue={album.name} fullWidth onChange={(e) => setName(e.target.value)} required />\n        <TextField margin=\"dense\" id=\"image_album\" label=\"Couverture\" fullWidth defaultValue={album.image_album} onChange={(e) => setImage_Album(e.target.value)}/>\n        <TextField margin=\"dense\" id=\"year\" label=\"Année de sortie\" type=\"number\" fullWidth defaultValue={album.release_year} onChange={(e) => setYear(e.target.value)} required/>\n        <TextField margin=\"dense\" id=\"artistName\" label=\"Nom de l'artiste\" type=\"string\" fullWidth defaultValue={album.artist.alias} onChange={(e) => setArtistName(e.target.value)} required/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button variant=\"outlined\" onClick={updateAlbum} color=\"primary\">\n          Ajouter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Box, CircularProgress, Fab, IconButton, Snackbar } from '@material-ui/core'\nimport { Card, CardContent, CardMedia, Typography, Grid, makeStyles, Avatar} from '@material-ui/core'\nimport { Add, Delete, Edit } from '@material-ui/icons'\nimport Alert from '@material-ui/lab/Alert'\nimport { useParams, Link } from \"react-router-dom\";\n\nimport Title from '../components/Title'\nimport DialogAddArtist from './DialogAddArtist'\nimport DialogDeleteAlbum from '../Albums/DialogDeleteAlbum'\nimport DialogUpdateAlbum from '../Albums/DialogUpdateAlbum'\nimport artistService from '../lib/artistService'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 0,\n    padding: theme.spacing(2)\n  },\n  card: {\n    height: 200,\n    width: 150\n  },\n  avatar: {\n    'margin-left': 'auto',\n    'margin-right': 'auto',\n    'margin-top': '5px',\n    'margin-bottom': '40px',\n    color: theme.palette.getContrastText('#42ab9e'),\n    backgroundColor: '#42ab9e',\n    width: 80,\n    height: 80\n  }\n}));\n\nexport default function Artist() {\n  const [loading, setLoading] = useState(true)\n  const [albums, setAlbums] = useState([])\n  const [artist, setArtist] = useState({})\n  const [openAddDialog, setOpenAddDialog] = useState(false)\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false)\n  const [albumDeleted, setAlbumDeleted] = useState({})\n  const [openUpdateDialog, setOpenUpdateDialog] = useState(false)\n  const [albumUpdate, setAlbumUpdate] = useState({})\n  const [openAlert, setOpenAlert] = useState(false)\n  const classes = useStyles();\n  const isAdmin = false;\n  let { id } = useParams();\n\n  useEffect(() => { \n    init()\n  }, [])\n\n  const init = async () => {\n    try {\n      let artist = []\n      artist = await artistService.getOne(id);\n      if(artist.albums != null) {\n        setAlbums(artist.albums)\n      } else {\n        setAlbums([])\n      }\n      if(artist != null) {\n        setArtist(artist)\n      } else {\n        setArtist({})\n      }\n      setTimeout(function () {\n        setLoading(false)\n      }, 1500)\n    } catch (error) {\n      setLoading(false)\n      setOpenAlert(true)\n    }\n  }\n  \n  return (\n    <>\n      <Title>{artist.alias}</Title>\n      {artist.image_artist != null &&\n        <CardMedia\n          image={process.env.PUBLIC_URL + '/img/'+ artist.image_artist}\n          title={artist.alias}\n          style={{ height: '200px', width: '200px', 'border-radius': '100px', margin: '5px auto 40px auto'}}\n        />\n      }\n      {artist.image_artist == null &&\n        <Avatar className={classes.avatar} style={{ height: '200px', width: '200px', 'border-radius': '100px', margin: '5px auto 40px auto'}}>\n          {artist.alias}\n          </Avatar>\n      }\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n          className={classes.root}\n        >\n          {albums.map((album) => (\n            <Grid item xs={12} sm={6} md={3} key={albums.indexOf(album)}>\n              <Card className={classes.card} key={album.name} component={Link} to={\"/album/\"+album.id}>\n                {album.image_album != null &&\n                  <CardMedia\n                    image={process.env.PUBLIC_URL + '/img/' +album.image_album}\n                    title={album.name}\n                    style={{ height: '140px', width: '140px', 'margin-top': '5px', 'margin-left': 'auto', 'margin-right': 'auto'}}\n                  />\n                }\n                {album.image_album == null &&\n                  //<Avatar className={classes.avatar}>{album.name.substring(0,1)}</Avatar>\n                  <CardMedia\n                    image={process.env.PUBLIC_URL + '/img/default_album.jpg'}\n                    title={album.name}\n                    style={{ height: '140px', width: '140px', 'margin-top': '5px', 'margin-left': 'auto', 'margin-right': 'auto'}}\n                  />\n                }\n                <div>\n                  <CardContent>\n                    <Typography style={{ 'text-align': 'center', 'font-weight': 'bold'}}>\n                      {album.name}\n                    </Typography>\n                  </CardContent>\n                  {isAdmin !== false && \n                    <div>\n                      <IconButton aria-label=\"Modifier un artiste\" onClick={() => {\n                        setAlbumUpdate(album)\n                        setOpenUpdateDialog(true)\n                        }}>\n                        <Edit />\n                      </IconButton>\n                      <IconButton aria-label=\"Supprimer un artiste\" onClick={() => {\n                        setAlbumDeleted(album)\n                        setOpenDeleteDialog(true)\n                        }}>\n                        <Delete />\n                      </IconButton>\n                    </div>\n                  }\n                </div>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" style={{ height: '100%' }}>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={() => setOpenAddDialog(true)}>\n          <Add />\n        </Fab>\n      </Box>\n      {/* Add */}\n      {openAddDialog && (\n        <DialogAddArtist\n          open={openAddDialog}\n          handleClose={() => setOpenAddDialog(false)}\n          reload={() => {\n            setOpenAddDialog(false)\n            init()\n          }}\n        />\n      )}\n      {/* Update */}\n      {openUpdateDialog && (\n        <DialogUpdateAlbum\n          open={openUpdateDialog}\n          album={albumUpdate}\n          handleClose={() => setOpenUpdateDialog(false)}\n          reload={() => {\n            setOpenUpdateDialog(false)\n            init()\n          }}\n        />\n      )}\n      {/* Delete */}\n      {openDeleteDialog && (\n        <DialogDeleteAlbum\n          open={openDeleteDialog}\n          album={albumDeleted}\n          handleClose={() => setOpenDeleteDialog(false)}\n          reload={() => {\n            setOpenDeleteDialog(false)\n            init()\n          }}\n        />\n      )}\n      <Snackbar open={openAlert} autoHideDuration={5000} onClose={() => setOpenAlert(false)}>\n        <Alert onClose={() => setOpenAlert(false)} severity=\"error\">\n          Une erreur réseau est survenue\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport artistService from '../lib/artistService'\n\nexport default function DialogDeleteArtist({ open, handleClose, reload, artist}) {\n\n  const deleteArtist = async () => {\n    await artistService.delete(artist.id)\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Suppression d'un artiste</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Voulez-vous vraiment supprimer {artist.alias} ?</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Non\n        </Button>\n        <Button variant=\"outlined\" onClick={deleteArtist} color=\"primary\">\n          Oui\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core'\nimport artistService from '../lib/artistService'\n\nexport default function DialogUpdateArtist({ open, handleClose, reload, artist }) {\n  const [alias, setAlias] = useState('');\n  const [image_artist, setImage_Artist] = useState('');\n\n\n  const updateArtist = async () => {\n    if (alias === '') {\n      return\n    } else if (image_artist === ''){\n      setImage_Artist(null)\n    }\n    \n    await artistService.update({id: artist.id, alias: alias, image_artist: image_artist})\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Modifier un nouvel artiste</DialogTitle>\n      <DialogContent>\n        <TextField autoFocus id=\"alias_edit\" label=\"Alias\" defaultValue={artist.alias} fullWidth onChange={(e) => setAlias(e.target.value)} required></TextField>\n        <TextField id=\"image_artist_edit\" label=\"Image\" defaultValue={artist.image_artist} fullWidth onChange={(e) => setImage_Artist(e.target.value)}></TextField>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button variant=\"outlined\" onClick={updateArtist} color=\"primary\">\n          Modifier\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","const axios = require('axios');\naxios.defaults.baseURL = 'http://51.91.58.213:8080/';\naxios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nclass FavoryService {\n\n    async getAll() {\n        const token = localStorage.getItem('token');\n        return await axios.get(`favorite`, {headers:{\n            'Authorization': `Bearer ${token}` \n        }}).then(\n            function(r){\n                return r.data\n            }\n        );\n    \n    }\n\n    async addFavorite(root,id) {\n        const token = await localStorage.getItem('token') \n        return axios.post(`favorite/add/${root}/${id}`,{},{headers:{\n            'Authorization': `Bearer ${token}` \n        }});\n      }\n\n    async deleteFavorite(root,id) {\n        const token = localStorage.getItem('token') \n        return axios.delete(`favorite/delete/${root}/${id}`,{headers:{\n            'Authorization': `Bearer ${token}` \n        }});\n    }\n}\n\nconst favoryService = new FavoryService();\n\nexport default favoryService;\n","import React, { useEffect, useState } from 'react'\nimport { Box, CircularProgress, Fab, IconButton, Snackbar } from '@material-ui/core'\nimport { Card, CardContent, CardMedia, Typography, Grid, makeStyles, Avatar} from '@material-ui/core'\nimport { Add, Delete, Edit, Star } from '@material-ui/icons'\nimport Alert from '@material-ui/lab/Alert'\nimport { Link } from \"react-router-dom\";\n\nimport Title from '../components/Title'\nimport DialogAddArtist from './DialogAddArtist'\nimport DialogDeleteArtist from './DialogDeleteArtist'\nimport DialogUpdateArtist from './DialogUpdateArtist'\nimport artistService from '../lib/artistService'\nimport favoryService from '../lib/favoryService'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 0,\n    padding: theme.spacing(2)\n  },\n  media: {\n    height: 80,\n    width: 80\n    \n  },\n  card: {\n    display: 'block',\n    height: '100%',\n    width: 300,\n    'padding-top': 25,\n    'text-decoration': 'none',\n    color: 'black',\n  },\n  avatar: {\n    'margin-left': 'auto',\n    'margin-right': 'auto',\n    'margin-top': '5px',\n    color: theme.palette.getContrastText('#42ab9e'),\n    backgroundColor: '#42ab9e',\n    width: 200,\n    height: 200\n  }\n}));\n\nexport default function Artists() {\n  const [loading, setLoading] = useState(true)\n  const [artists, setArtists] = useState([])\n  const [openAddDialog, setOpenAddDialog] = useState(false)\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false)\n  const [artistDeleted, setArtistDeleted] = useState({})\n  const [openUpdateDialog, setOpenUpdateDialog] = useState(false)\n  const [artistUpdate, setArtistUpdate] = useState({})\n  const [openAlert, setOpenAlert] = useState(false)\n  const classes = useStyles();\n  const isAdmin = false;\n\n  useEffect(() => { \n    init()\n  }, [])\n\n  const init = async () => {\n    try {\n      let artists = []\n      artists = await artistService.getAll();\n      if (artists != null) {\n        setArtists(artists)\n      } else {\n        setArtists([])\n      }\n      setTimeout(function () {\n        setLoading(false)\n      }, 1500)\n    } catch (error) {\n      setLoading(false)\n      setOpenAlert(true)\n    }\n  }\n  \n  return (\n    <>\n      <Title>Liste des artistes</Title>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n          className={classes.root}\n        >\n          {artists.map((artist) => (\n            <Grid item xs={12} sm={6} md={3} key={artists.indexOf(artist)}>\n              <Card className={classes.card} key={artist.alias}>\n                    {artist.image_artist !== null &&\n                  <CardMedia component={Link} to={\"/artist/\"+artist.id}\n                    image={process.env.PUBLIC_URL + '/img/'+ artist.image_artist}        \n                    title={artist.alias}\n                    style={{ height: '200px', width: '200px', 'border-radius': '100px', 'margin-top': '5px', 'margin-left': 'auto', 'margin-right': 'auto'}}\n                  />\n                }\n                {artist.image_artist == null &&\n                  <Avatar component={Link} to={\"/artist/\"+artist.id} className={classes.avatar}>{artist.alias.substring(0,1)}</Avatar>\n                }\n                <div>\n                  <CardContent>\n                    <Typography component={Link} to={\"/artist/\"+artist.id} style={{'text-align': 'center', 'font-weight': 'bold'}}>\n                      {artist.alias}\n                    </Typography>\n                  </CardContent>\n                    <div>\n                      <IconButton aria-label=\"Modifier un artiste\" onClick={() => {\n                        setArtistUpdate(artist)\n                        setOpenUpdateDialog(true)\n                        }}>\n                        <Edit />\n                      </IconButton>\n                      <IconButton aria-label=\"Supprimer un artiste\" onClick={() => {\n                        setArtistDeleted(artist)\n                        setOpenDeleteDialog(true)\n                        }}>\n                        <Delete />\n                      </IconButton>\n                      <IconButton aria-label=\"favori artist\" onClick={() => {\n                        favoryService.addFavorite(\"artist\", artist.id)\n                      }}>\n                      <Star />\n                      </IconButton>\n                    </div>\n                </div>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" style={{ height: '35%' }}>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={() => setOpenAddDialog(true)}>\n          <Add />\n        </Fab>\n      </Box>\n      {/* Add */}\n      {openAddDialog && (\n        <DialogAddArtist\n          open={openAddDialog}\n          handleClose={() => setOpenAddDialog(false)}\n          reload={() => {\n            setOpenAddDialog(false)\n            init()\n          }}\n        />\n      )}\n      {/* Update */}\n      {openUpdateDialog && (\n        <DialogUpdateArtist\n          open={openUpdateDialog}\n          artist={artistUpdate}\n          handleClose={() => setOpenUpdateDialog(false)}\n          reload={() => {\n            setOpenUpdateDialog(false)\n            init()\n          }}\n        />\n      )}\n      {/* Delete */}\n      {openDeleteDialog && (\n        <DialogDeleteArtist\n          open={openDeleteDialog}\n          artist={artistDeleted}\n          handleClose={() => setOpenDeleteDialog(false)}\n          reload={() => {\n            setOpenDeleteDialog(false)\n            init()\n          }}\n        />\n      )}\n      <Snackbar open={openAlert} autoHideDuration={5000} onClose={() => setOpenAlert(false)}>\n        <Alert onClose={() => setOpenAlert(false)} severity=\"error\">\n          Une erreur réseau est survenue\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n","import webservice from './webservice'\n\nclass SongService extends webservice {\n\n    constructor(){\n        super('song')\n    }\n}\n\nconst songService = new SongService();\n\nexport default songService;","import React, { useState } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport SongService from '../lib/songService'\n\nexport default function DialogAddSong({ open, handleClose, reload, album }) {\n  const [title, setTitle] = useState('')\n  const [duration, setDuration] = useState('')\n  const [artistId, setArtistId] = useState('')\n  const [albumId, setAlbumId] = useState('')\n  \n\n  const addSong = async () => {\n    if (title === '' || duration === '') {\n      return\n    }\n    let idArtist = album.artist.id\n    await SongService.add({title: title, duration: duration, album_id : album.id ,artist_id: idArtist })\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Ajouter une nouvelle chanson</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Pour ajouter une chanson, veuillez saisir les champs demandés</DialogContentText>\n        <TextField autoFocus margin=\"dense\" id=\"title\" label=\"Titre\" fullWidth onChange={(e) => setTitle(e.target.value)} required />\n        <TextField margin=\"dense\" id=\"duration\" label=\"Durée\" fullWidth onChange={(e) => setDuration(e.target.value)} required/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button variant=\"outlined\" onClick={addSong} color=\"primary\">\n          Ajouter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core'\nimport SongService from '../lib/songService'\n\nexport default function DialogUpdateSong({ open, handleClose, reload, song }) {\n  const [title, setTitle] = useState('')\n  const [duration, setDuration] = useState('')\n\n  const updateSong = async () => {\n    let res = {}\n    res.id = song.id\n    if (title === '') {\n      res.title = song.title\n    } else {\n      res.title = title\n    }\n    if(duration === '') {\n      res.duration = song.duration\n    } else {\n      res.duration = duration\n    }\n    await SongService.update(res)\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Modifier une chanson</DialogTitle>\n      <DialogContent>\n        <TextField autoFocus margin=\"dense\" id=\"title\" label=\"Titre\" defaultValue={song.title} fullWidth onChange={(e) => setTitle(e.target.value)} required/>\n        <TextField margin=\"dense\" id=\"duration\" label=\"Durée\" defaultValue={song.duration} fullWidth onChange={(e) => setDuration(e.target.value)} required/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button variant=\"outlined\" onClick={updateSong} color=\"primary\">\n          Ajouter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport SongService from '../lib/songService'\n\nexport default function DialogDeleteSong({ open, handleClose, reload, song}) {\n\n  const deleteSong = async () => {\n    await SongService.delete(song.id)\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Suppression d'une Chanson</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Voulez-vous vraiment supprimer {song.title} ?</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Non\n        </Button>\n        <Button variant=\"outlined\" onClick={deleteSong} color=\"primary\">\n          Oui\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","const axios = require('axios');\naxios.defaults.baseURL = 'http://localhost:8080/';\naxios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nclass PlaylistService {\n\n    async getAll() {\n        const token = localStorage.getItem('token');\n        return await axios.get(`playlist`, {headers:{\n            'Authorization': `Bearer ${token}` \n        }}).then(\n            function(r){\n                return r.data\n            }\n        );\n    \n    }\n\n    async addPlaylist(root,id) {\n        const token = await localStorage.getItem('token') \n        return axios.post(`playlist/add/${root}/${id}`,{},{headers:{\n            'Authorization': `Bearer ${token}` \n        }});\n      }\n\n    async deletePlaylist(root,id) {\n        const token = localStorage.getItem('token') \n        return axios.delete(`playlist/delete/${root}`, id,{headers:{\n            'Authorization': `Bearer ${token}` \n        }});\n    }\n}\n\nconst playlistService = new PlaylistService();\n\nexport default playlistService;","import React, { useState } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport SongService from '../lib/songService'\nimport PlaylistService from '../lib/playlistService'\n\nexport default function DialogAddSongToPlaylist({ open, handleClose, reload }) {\n\n  const addPlaylist = async () => {\n\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Ajouter le son dans la playlist :</DialogTitle>\n      <DialogContent>\n  \n      \n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button variant=\"outlined\" onClick={addPlaylist} color=\"primary\">\n          Ajouter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Box, CircularProgress, Fab, IconButton, Snackbar, Table, TableBody, TableCell, TableHead, TableRow, Grid, Typography } from '@material-ui/core'\nimport { Add, Delete, Edit, Star, QueueMusic } from '@material-ui/icons'\nimport Alert from '@material-ui/lab/Alert'\nimport { useParams, Link } from \"react-router-dom\";\n\nimport Title from '../components/Title'\nimport DialogAddSong from './DialogAddSong'\nimport DialogUpdateSong from './DialogUpdateSong'\nimport DialogDeleteSong from './DialogDeleteSong'\nimport DialogAddSongToPlaylist from './DialogAddSongToPlaylist'\nimport AlbumService from '../lib/albumService'\nimport favoryService from '../lib/favoryService'\n\n\nexport default function Album() {\n  const [loading, setLoading] = useState(true)\n  const [artist, setArtist] = useState({})\n  const [album, setAlbum] = useState({})\n  const [songs, setSongs] = useState([])\n  const [openAddDialog, setOpenAddDialog] = useState(false)\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false)\n  const [songDeleted, setSongDeleted] = useState({})\n  const [openUpdateDialog, setOpenUpdateDialog] = useState(false)\n  const [songUpdate, setSongUpdate] = useState({})\n  const [openAlert, setOpenAlert] = useState(false)\n  const [openAddSongToPlaylist, setOpenAddSongToPlaylist] = useState(false)\n  \n  let { id } = useParams();\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  const init = async () => {\n\n    try {\n      let album = await AlbumService.getOne(id);\n      if(album.artist != null) {\n        setArtist(album.artist)\n      } else {\n        setArtist({})\n      }\n      if(album != null) {\n        setAlbum(album)\n      } else {\n        setAlbum({})\n      }\n      if(album.songs != null) {\n        setSongs(album.songs)\n      } else {\n        setSongs([])\n      }\n      setTimeout(function () {\n        setLoading(false)\n      }, 1500)\n    } catch (error) {\n      setLoading(false)\n      setOpenAlert(true)\n    }\n  }\n\n  return (\n    <>\n      <Grid container>\n        <Grid item>\n          {album.image_album != null &&\n            <img\n                src={process.env.PUBLIC_URL + '/img/'+ album.image_album}\n                alt={album.name}\n                style={{ height: '200px', width: '200px', 'border-radius': '100px', margin: '5px auto 40px auto'}}\n              />\n          }\n          {album.image_album == null &&\n            <img\n                src={process.env.PUBLIC_URL + '/img/default_album.jpg'}\n                alt={album.name}\n                style={{ height: '200px', width: '200px', 'border-radius': '100px', margin: '5px auto 40px auto'}}\n              />\n          }\n        </Grid>\n        <Grid item style={{padding: '0 0 0 15px'}}>\n          <div>\n            <Typography component=\"h1\" variant=\"h4\" color=\"black\" gutterBottom>{album.name}</Typography>\n            <Typography component=\"h1\" variant=\"h5\" color=\"black\" gutterBottom component={Link} to={\"/artist/\"+artist.id}>{artist.alias}</Typography>\n            <Typography component=\"h1\" color=\"black\" gutterBottom>{album.release_year}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      <Title>Liste des Chansons</Title>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Nom</TableCell>\n              <TableCell>durée</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {songs.map((song) => (\n              <TableRow key={song.title}>\n                <TableCell>{song.title}</TableCell>\n                <TableCell>{song.duration}</TableCell>\n                <TableCell>\n                  <IconButton aria-label=\"Modifier un song\" onClick={() => {\n                    setSongUpdate(song)\n                    setOpenUpdateDialog(true)\n                    }}>\n                    <Edit />\n                  </IconButton>\n                  <IconButton aria-label=\"Supprimer un song\" onClick={() => {\n                    setSongDeleted(song)\n                    setOpenDeleteDialog(true)\n                    }}>\n                    <Delete />\n                  </IconButton>\n                  <IconButton aria-label=\"ajout au favori\" onClick={() => {favoryService.addFavorite(\"song\", song.id)}}>\n                    <Star />\n                  </IconButton>\n                  <IconButton aria-label=\"ajout a la playlist\" onClick={() => setOpenAddSongToPlaylist(true)}>\n                    <QueueMusic />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" style={{ height: '100%' }}>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={() => setOpenAddDialog(true)}>\n          <Add />\n        </Fab>\n      </Box>\n      {/* Add */}\n      {openAddDialog && (\n        <DialogAddSong\n          open={openAddDialog}\n          album = {album}\n          handleClose={() => setOpenAddDialog(false)}\n          reload={() => {\n            setOpenAddDialog(false)\n            init()\n          }}\n        />\n      )}\n      {/* Update */}\n      {openUpdateDialog && (\n        <DialogUpdateSong\n          open={openUpdateDialog}\n          song={songUpdate}\n          handleClose={() => setOpenUpdateDialog(false)}\n          reload={() => {\n            setOpenUpdateDialog(false)\n            init()\n          }}\n        />\n      )}\n      {/* Delete */}\n      {openDeleteDialog && (\n        <DialogDeleteSong\n          open={openDeleteDialog}\n          song={songDeleted}\n          handleClose={() => setOpenDeleteDialog(false)}\n          reload={() => {\n            setOpenDeleteDialog(false)\n            init()\n          }}\n        />\n      )}\n       {/* Add song to playlist */}\n       {openAddSongToPlaylist && (\n        <DialogAddSongToPlaylist\n          open={openAddSongToPlaylist}\n          handleClose={() => setOpenAddSongToPlaylist(false)}\n          reload={() => {\n            setOpenAddSongToPlaylist(false)\n            init()\n          }}\n        />\n      )}\n      <Snackbar open={openAlert} autoHideDuration={5000} onClose={() => setOpenAlert(false)}>\n        <Alert onClose={() => setOpenAlert(false)} severity=\"error\">\n          Une erreur réseau est survenue\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport AlbumService from '../lib/albumService'\n\nexport default function DialogAddAlbum({ open, handleClose, reload }) {\n  const [name, setName] = useState('')\n  const [image_album, setImage_Album] = useState('')\n  const [year, setYear] = useState('')\n  const [artistName, setArtistName] = useState('')\n\n  const addAlbum = async () => {\n    if (name === '' || year === '' || artistName === '') {\n      return\n    } else if (image_album === ''){\n      setImage_Album(null)\n    }\n\n    await AlbumService.add({name: name, image_album: image_album, release_year: year, artist_name: artistName})\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Ajouter un nouveau album</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Pour ajouter un album, veuillez saisir les champs demandés</DialogContentText>\n        <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Nom\" fullWidth onChange={(e) => setName(e.target.value)} required />\n        <TextField margin=\"dense\" id=\"image_album\" label=\"Couverture\" fullWidth onChange={(e) => setImage_Album(e.target.value)}/>\n        <TextField margin=\"dense\" id=\"year\" label=\"Année de sortie\" type=\"number\" fullWidth onChange={(e) => setYear(e.target.value)} required/>\n        <TextField margin=\"dense\" id=\"artistName\" label=\"Nom de l'artiste\" type=\"string\" fullWidth onChange={(e) => setArtistName(e.target.value)} required/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button variant=\"outlined\" onClick={addAlbum} color=\"primary\">\n          Ajouter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Box, CircularProgress, Fab, IconButton, Snackbar, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { Add, Delete, Edit, Star } from '@material-ui/icons'\nimport Alert from '@material-ui/lab/Alert'\nimport { Link } from 'react-router-dom'\n\nimport Title from '../components/Title'\nimport DialogAddAlbum from './DialogAddAlbum'\nimport DialogUpdateAlbum from './DialogUpdateAlbum'\nimport DialogDeleteAlbum from './DialogDeleteAlbum'\nimport AlbumService from '../lib/albumService'\nimport favoryService from '../lib/favoryService'\n\n\nexport default function Albums() {\n  const [loading, setLoading] = useState(true)\n  const [albums, setAlbums] = useState([])\n  const [openAddDialog, setOpenAddDialog] = useState(false)\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false)\n  const [albumDeleted, setAlbumDeleted] = useState({})\n  const [openUpdateDialog, setOpenUpdateDialog] = useState(false)\n  const [albumUpdate, setAlbumUpdate] = useState({})\n  const [openAlert, setOpenAlert] = useState(false)\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  const init = async () => {\n\n    try {\n      let albums = await AlbumService.getAll();\n      if(albums != null) {\n        setAlbums(albums)\n      } else {\n        setAlbums([])\n      }\n      setTimeout(function () {\n        setLoading(false)\n      }, 1500)\n    } catch (error) {\n      setLoading(false)\n      setOpenAlert(true)\n    }\n  }\n\n  return (\n    <>\n      <Title>Liste des albums</Title>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Couverture</TableCell>\n              <TableCell>Nom</TableCell>\n              {/* <TableCell>Artiste</TableCell> */}\n              <TableCell align=\"right\">Année de publication</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {albums.map((album) => (\n              <TableRow key={album.name}>\n                {album.image_album != null &&\n                  <TableCell component={Link} to={\"/album/\"+album.id}><img\n                      src={process.env.PUBLIC_URL + '/img/'+ album.image_album}\n                      alt={album.name}\n                      style={{ height: '50px', width: '50px', 'border-radius': '100px'}}\n                    /></TableCell>\n                }\n                {album.image_album == null &&\n                  <TableCell component={Link} to={\"/album/\"+album.id}><img\n                      src={process.env.PUBLIC_URL + '/img/default_album.jpg'}\n                      alt={album.name}\n                      style={{ height: '50px', width: '50px', 'border-radius': '100px'}}\n                    /></TableCell>\n                }\n                <TableCell component={Link} to={\"/album/\"+album.id}>{album.name}</TableCell>\n                {/* <TableCell>{album.artist.alias}</TableCell> */}\n                <TableCell align=\"right\" component={Link} to={\"/album/\"+album.id}>{album.release_year}</TableCell>\n                <TableCell>\n                  <IconButton aria-label=\"Modifier un album\" onClick={() => {\n                    setAlbumUpdate(album)\n                    setOpenUpdateDialog(true)\n                    }}>\n                    <Edit />\n                  </IconButton>\n                  <IconButton aria-label=\"Supprimer un album\" onClick={() => {\n                    setAlbumDeleted(album)\n                    setOpenDeleteDialog(true)\n                    }}>\n                    <Delete />\n                  </IconButton>\n                  <IconButton aria-label=\"favori album\" onClick={() => {favoryService.addFavorite(\"album\", album.id)\n                    }}>\n                    <Star />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" style={{ height: '100%' }}>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={() => setOpenAddDialog(true)}>\n          <Add />\n        </Fab>\n      </Box>\n      {/* Add */}\n      {openAddDialog && (\n        <DialogAddAlbum\n          open={openAddDialog}\n          handleClose={() => setOpenAddDialog(false)}\n          reload={() => {\n            setOpenAddDialog(false)\n            init()\n          }}\n        />\n      )}\n      {/* Update */}\n      {openUpdateDialog && (\n        <DialogUpdateAlbum\n          open={openUpdateDialog}\n          album={albumUpdate}\n          handleClose={() => setOpenUpdateDialog(false)}\n          reload={() => {\n            setOpenUpdateDialog(false)\n            init()\n          }}\n        />\n      )}\n      {/* Delete */}\n      {openDeleteDialog && (\n        <DialogDeleteAlbum\n          open={openDeleteDialog}\n          album={albumDeleted}\n          handleClose={() => setOpenDeleteDialog(false)}\n          reload={() => {\n            setOpenDeleteDialog(false)\n            init()\n          }}\n        />\n      )}\n      <Snackbar open={openAlert} autoHideDuration={5000} onClose={() => setOpenAlert(false)}>\n        <Alert onClose={() => setOpenAlert(false)} severity=\"error\">\n          Une erreur réseau est survenue\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n","const axios = require('axios');\naxios.defaults.baseURL = 'http://51.91.58.213:8080';\n\n\n\nclass UserService {\n    \n    async add(entity) {\n        return axios.post('sign-up', entity);\n    }\n\n    async login(entity){\n        return axios.post('sign-in', entity)\n    }\n\n    async signOut(){\n        localStorage.clear();\n    }\n}\n\nconst userService = new UserService();\n\nexport default userService;\n","import React, { useState } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport UserService from '../lib/userService'\n\nexport default function DialogAddUser({ open, handleClose, reload }) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [pseudo, setPseudo] = useState('')\n\n  const addUser = async () => {\n    if (email === '' || password === '' || pseudo === '') {\n      return\n    }\n\n    await UserService.add({avatar: null, email: email, password: password, pseudo: pseudo, favorite_id: null})\n    reload()\n  }\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Ajouter un nouvelle utilisateur </DialogTitle>\n      <DialogContent>\n        <DialogContentText>Créez un compte utilisateur</DialogContentText>\n        <TextField autoFocus margin=\"dense\" id=\"pseudo\" label=\"Pseudo\" fullWidth onChange={(e) => setPseudo(e.target.value)} required />\n        <TextField margin=\"dense\" id=\"email\" label=\"email\" fullWidth onChange={(e) => setEmail(e.target.value)} required />\n        <TextField margin=\"dense\" id=\"password\" label=\"Mot de passe\" fullWidth onChange={(e) => setPassword(e.target.value)} required />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button variant=\"outlined\" onClick={addUser} color=\"primary\">\n          Ajouter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport {Input, Typography, FormControl, FormGroup, Button } from '@material-ui/core'\nimport Title from '../components/Title'\nimport { Form } from 'react-bootstrap'\nimport UserService from '../lib/userService'\nimport { Redirect} from 'react-router-dom'\n\nexport default class LoginForm extends React.Component {\n    \n    static user;\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        email: '',\n        password: null,\n        redirect: false\n      };\n    }\n    myChangeHandler = (event) => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({[nam]: val});\n    }\n\n    login = async () => {\n      if (this.state.email === '' || this.state.password === '') {\n        return\n      }\n      this.user = await UserService.login(this.state);\n\n      if(this.user !== undefined ){\n        localStorage.setItem('id', this.user.data.id)\n        localStorage.setItem('email', this.user.data.email)\n        localStorage.setItem('pseudo',this.user.data.pseudo)\n        localStorage.setItem('token', this.user.data.token)\n        localStorage.setItem('isConnect', true)\n\n        this.setState({ redirect: true })\n      }\n    }\n\n    render() {\n      const { redirect } = this.state;\n    \n      if (redirect) {\n        return <Redirect to='/'/>;\n      }\n      return (\n        <Form >\n          <FormGroup>\n            <FormControl style={{ width: '20%', left: '40%', top: '20%'}}>\n              <Title>Se connecter</Title>\n              <Typography>Email :</Typography>\n              <Input style={{ margin: '20px' }}\n                type='text'\n                name='email'\n                onChange={this.myChangeHandler}\n              />\n          </FormControl>\n        </FormGroup>\n        <FormGroup>\n          <FormControl style={{ width: '20%', left: '40%', top: '20%'}}>\n            <Typography>Mot de passe :</Typography>\n            <Input style={{ margin: '20px' }}\n              type='password'\n              name='password'\n              onChange={this.myChangeHandler}\n              />\n              </FormControl>\n          </FormGroup>\n          <FormControl style={{ width: '20%', left: '40%', top: '20%'}}>\n            <Button onClick={this.login}\n              style={{ margin: '20px', color: '#42ab9e',  border: '2px solid rgba(66, 171, 158, 0.5)', background: 'transparent'}}\n              // id='submit'\n              // type='submit'\n            >\n            Soumettre </Button>\n          </FormControl>\n        </Form>\n      );\n    }\n  }","import React, { useEffect, useState } from 'react'\nimport { Box, CircularProgress, Fab, Snackbar, Typography } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport Alert from '@material-ui/lab/Alert'\n\nimport DialogAddUser from './DialogAddUser'\nimport LoginForm from '../components/LoginForm'\n\nexport default function Users() {\n  const [loading, setLoading] = useState(true)\n  const [openAddDialog, setOpenAddDialog] = useState(false)\n  const [openAlert, setOpenAlert] = useState(false)\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  const init = async () => {\n    try {\n      setTimeout(function () {\n        setLoading(false)\n      }, 1500)\n    } catch (error) {\n      setLoading(false)\n      setOpenAlert(true)\n    }\n  }\n\n  return (\n    <>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n      <LoginForm />\n      )}\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" style={{ height: '100%' }}>\n      <Typography style={{ margin: '20px' }}>Créez un compte utilisateur</Typography>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={() => setOpenAddDialog(true)}>\n          <Add />\n        </Fab>\n      </Box>\n      {openAddDialog && (\n        <DialogAddUser\n          open={openAddDialog}\n          handleClose={() => setOpenAddDialog(false)}\n          reload={() => {\n            setOpenAddDialog(false)\n            init()\n          }}\n        />\n      )}\n      <Snackbar open={openAlert} autoHideDuration={5000} onClose={() => setOpenAlert(false)}>\n        <Alert onClose={() => setOpenAlert(false)} severity=\"error\">\n          Une erreur réseau est survenue\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { CircularProgress, IconButton, Snackbar, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport {  Delete } from '@material-ui/icons'\nimport Alert from '@material-ui/lab/Alert'\n\nimport Title from '../components/Title'\nimport favoryService from '../lib/favoryService'\n\nexport default function Favory() {\n    const [loading, setLoading] = useState(true)\n    const [favoritesAlbums, setFavoritesAlbums] = useState([])\n    const [favoritesSongs, setFavoritesSongs] = useState([])\n    const [favoritesArtists, setFavoritesArtists] = useState([])\n    const [openAlert, setOpenAlert] = useState(false)\n  \n    useEffect(() => {\n      init()\n    }, [])\n  \n    const init = async () => {\n  \n      try {\n        let favorites = await favoryService.getAll();\n        if (favorites.favoriteArtists != null) {\n          setFavoritesArtists(favorites.favoriteArtists);\n        } else {\n          setFavoritesArtists([]);\n        }\n        if(favorites.favoriteAlbums != null) {\n          setFavoritesAlbums(favorites.favoriteAlbums)\n        } else {\n          setFavoritesAlbums([])\n        }\n        if(favorites.favoriteSongs != null) {\n          setFavoritesSongs(favorites.favoriteSongs)\n        } else {\n          setFavoritesSongs([])\n        }\n\n        setTimeout(function () {\n          setLoading(false)\n        }, 1500)\n      } catch (error) {\n        setLoading(false)\n        setOpenAlert(true)\n      }\n    }\n    // const deleteFavory = async (favory) => {\n    //   await favoryService.deleteFavorite(favory.id)\n    //   reload()\n    // }\n    return (\n      <>\n        <Title>Liste des favoris</Title>\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <Table size=\"small\">\n            <TableHead>\n              <h1>Album :</h1>\n              <TableRow>\n                <TableCell>Nom de l'album :</TableCell>\n                <TableCell>Date de sortie : </TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {favoritesAlbums.map((favory) => (\n                <TableRow key={favory.name}>\n                  <TableCell>{favory.name}</TableCell>\n                  <TableCell>{favory.release_year}</TableCell>\n                  <TableCell>\n                    <IconButton aria-label=\"Supprimer un favori\" onClick={async() => {\n                      await favoryService.deleteFavorite(\"album\",favory.id)\n                      init()}}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          \n        )}\n        {loading ? (\n          <CircularProgress />\n        ) : (\n        <Table size=\"small\">\n            <TableHead>\n              <h1>Songs :</h1>\n              <TableRow>\n                <TableCell>Nom</TableCell>\n                <TableCell>Durée</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {favoritesSongs.map((favory) => (\n                <TableRow key={favory.title}>\n                  <TableCell>{favory.title}</TableCell>\n                  <TableCell>{favory.duration}</TableCell>\n                  <TableCell>\n                    <IconButton aria-label=\"Supprimer un favori\" onClick={async() =>  { \n                      await favoryService.deleteFavorite(\"song\",favory.id) \n                      init()}}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        )}\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <Table size=\"small\">\n            <TableHead>\n              <h1>Artistes :</h1>\n              <TableRow>\n                <TableCell>Alias</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {favoritesArtists.map((favory) => (\n                <TableRow key={favory.name}>\n                  <TableCell>{favory.alias}</TableCell>\n                  <TableCell>\n                    <IconButton aria-label=\"Supprimer un favori\" onClick={async() => { \n                      await favoryService.deleteFavorite(\"artist\",favory.id) \n                      init()}}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        )}\n        <Snackbar open={openAlert} autoHideDuration={5000} onClose={() => setOpenAlert(false)}>\n          <Alert onClose={() => setOpenAlert(false)} severity=\"error\">\n            Une erreur réseau est survenue\n          </Alert>\n        </Snackbar>\n      </>\n    )\n  }","import React, { useState } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport playlistService from '../lib/playlistService'\n\nexport default function DialogAddPlaylist({ open, handleClose, reload }) {\n  const [name, setName] = useState('')\n\n  const addPlaylist = async () => {\n    if (name === '') {\n      return\n    }\n    \n    await playlistService.add({name: name, })\n    reload()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Nouvelle playlist: </DialogTitle>\n      <DialogContent>\n        <TextField autoFocus margin=\"dense\" id=\"name\" label=\"nom :\" fullWidth onChange={(e) => setName(e.target.value)} required />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button variant=\"outlined\" onClick={addPlaylist} color=\"primary\">\n          Ajouter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { CircularProgress, IconButton, Snackbar, Table, TableBody, TableCell, TableHead, TableRow, Box, Fab } from '@material-ui/core'\nimport { Add, Delete } from '@material-ui/icons'\nimport Alert from '@material-ui/lab/Alert'\nimport DialogAddPlaylist from './DialogAddPlaylist'\n\nimport Title from '../components/Title'\nimport PlaylistService from '../lib/playlistService'\n\nexport default function Playlist() {\n  const [loading, setLoading] = useState(true)\n  const [playlists, setPlaylists] = useState([])\n  const [openAddDialog, setOpenAddDialog] = useState(false)\n  const [openAlert, setOpenAlert] = useState(false)\n\n  \n    useEffect(() => {\n      init()\n    }, [])\n  \n    const init = async () => {\n  \n      try {\n        let playlists = await PlaylistService.getAll();\n        setPlaylists(playlists)\n        setTimeout(function () {\n          setLoading(false)\n        }, 1500)\n      } catch (error) {\n        setLoading(false)\n        setOpenAlert(true)\n      }\n    }\n\n    return (\n      <>\n        <Title>Mes Playlists :</Title>\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          playlists.map((playlist) => (\n          <Table size=\"small\">\n            <TableHead>\n              <h1>Playlists {playlist.name} :</h1>\n              <TableRow>\n                <TableCell>Nom de la Musique :</TableCell>\n                <TableCell>Durée : </TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n       \n            </TableBody>\n          </Table>\n          )))}\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" style={{ height: '100%' }}>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={() => setOpenAddDialog(true)}>\n          <Add />\n        </Fab>\n      </Box>\n      {/* Add */}\n      {openAddDialog && (\n        <DialogAddPlaylist\n          open={openAddDialog}\n          handleClose={() => setOpenAddDialog(false)}\n          reload={() => {\n            setOpenAddDialog(false)\n            init()\n          }}\n        />\n      )}\n        <Snackbar open={openAlert} autoHideDuration={5000} onClose={() => setOpenAlert(false)}>\n          <Alert onClose={() => setOpenAlert(false)} severity=\"error\">\n            Une erreur réseau est survenue\n          </Alert>\n        </Snackbar>\n      </>\n    )\n  }","import React, { useState } from 'react'\nimport { useLocation, Switch, Route, Link } from 'react-router-dom'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { Album, Person, Home, Star, QueueMusic, LockOpen, AccountCircle, DirectionsRun  } from '@material-ui/icons'\nimport Artist from './Artists/Artist'\nimport Artists from './Artists/Artists'\nimport Albuma from './Albums/Album'\nimport Albums from './Albums/Albums'\nimport userService from './lib/userService';\nimport { createHashHistory } from \"history\"\nimport Users from './Users/Users'\nimport Favory from './Favori/Favory'\nimport Playlist from './Playlist/Playlists'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  title: {\n    flexGrow: 1,\n  },\n}))\n\nconst Homes = () => {\n  return (\n    <>\n      <div>Sélectionner une page</div>\n      <img src={process.env.PUBLIC_URL + 'logo512.png'} alt=\"Logo Ynov\" />\n    </>\n  )\n}\n\nexport default function App(props) {\n  const history = createHashHistory();\n  const classes = useStyles()\n  const { window } = props;\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const signOut = () => {\n    userService.signOut()\n    history.go(\"users\");\n  }\n  const location = useLocation()\n  let title = ''\n  switch (location.pathname) {\n    default:\n      title= \"\"\n      break\n    case '/':\n      title = \"Page d'accueil\"\n      break\n    case '/albums':\n      title = 'Albums'\n      break\n    case '/artists':\n      title = 'Artistes'\n      break\n    case '/favory':\n      title = 'Favories'\n      break\n    case '/playlist':\n      title = 'Playlists'\n      break\n  }\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <ListItem component={Link} to=\"/\">\n        <ListItemIcon>\n          <Home />\n        </ListItemIcon>\n      </ListItem>\n      {/* <div className={classes.toolbar} /> */}\n      <Divider />\n      <List>\n        <ListItem component={Link} to=\"/favory\">\n          <ListItemIcon>\n            <Star />\n          </ListItemIcon>\n          <ListItemText primary=\"Mes favoris\" />\n        </ListItem>\n        <ListItem component={Link} to=\"/playlist\">\n          <ListItemIcon>\n            <QueueMusic />\n          </ListItemIcon>\n          <ListItemText primary=\"Mes playlists\" />\n        </ListItem>\n        <ListItem component={Link} to=\"/artists\">\n          <ListItemIcon> \n            <Person />\n          </ListItemIcon>\n          <ListItemText primary=\"Artistes\" />\n        </ListItem>\n        <ListItem component={Link} to=\"/albums\">\n          <ListItemIcon>\n            <Album />\n          </ListItemIcon>\n          <ListItemText primary=\"Albums\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n  return (\n    <>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, classes.appBarShift)}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton> \n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              {title}\n            </Typography>\n            {localStorage.getItem('isConnect') == null && (\n              <div>\n                <IconButton\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  component={Link} to=\"/users\"\n                  color=\"inherit\"\n                >\n                  <AccountCircle />\n                </IconButton>\n              </div>\n            )}\n            {new Boolean(localStorage.getItem('isConnect')) == true && (\n              <div>\n                <IconButton\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-deconnexion\"\n                  aria-haspopup=\"true\"\n                  onClick={signOut}\n                  color=\"inherit\">\n                  <DirectionsRun />\n                </IconButton>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n          {/* <Drawer\n            variant=\"persistent\"\n            open={open}\n            onClose={() => setOpen(false)}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div>\n              \n            </div>\n          </Drawer> */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n                {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Switch>\n            <Route exact path=\"/\" render={() => <Homes />} />\n            <Route path=\"/artists\" render={() => <Artists />} />\n            <Route path=\"/artist/:id\" render={() => <Artist />} />\n            <Route path=\"/albums\" render={() => <Albums />} />\n            <Route path=\"/album/:id\" render={() => <Albuma />} />\n            <Route path=\"/users\" render={() => <Users />}  />\n            <Route path=\"/favory\" render={() => <Favory />} />\n            <Route path=\"/playlist\" render={() => <Playlist />} />\n          </Switch>\n        </main>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport App from './App'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#42ab9e'\n    }\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}